@name Base Control

#Var
@persist [EGP1Sig EGP2Sig BaseSig MinerSig Group]:string [Scope]:number

#Door Var
@persist [DoorTime]:number

#Blinds Var
@persist [CAlpha CAlphaStep]:number
@persist [GAlpha GAlphaStep]:number
@persist [AlphaStep AlphaTime]:number

#I/O
@inputs [Core Ent Cache Raw Product]:wirelink
@outputs [Whitelist]:array
@inputs [Inputs]:array
@outputs [Outputs]:array

#Door I/O
@inputs [D1Ent D2Ent]:entity
@outputs [D1 D2]:number

#Base I/O
@outputs [LS Refine Power]:number

#Dupe Code
if(dupefinished()){
    reset()
}

#First Code
First=first()
if(First){
    #Function Preset
    Whitelist[1,string]="1xinfusion"
    Whitelist[2,string]="Flyyte"
    Whitelist[3,string]="Braade"
    D1=0
    D2=0
    #Signal Var
    EGP1Sig="EGP1"
    EGP2Sig="EGP2"
    BaseSig="Base"
    MinerSig="Miner"
    Group="Base"
    Scope=0
    signalSetGroup(Group)
    runOnSignal(BaseSig,Scope,1)
    #Var
    DoorTime=5000
    AlphaStep=10
    AlphaTime=50
}

timer("EGP2",1000)
if(clk("EGP2")){
    HAmt=Core["Hull",number]
    AAmt=Core["Armor",number]
    SAmt=Core["Shield",number]
    CAmt=Core["Capacitor",number]
    MHAmt=Core["Max Hull",number]
    MAAmt=Core["Max Armor",number]
    MSAmt=Core["Max Shield",number]
    MCAmt=Core["Max Capacitor",number]
    HullPerc=round((HAmt/MHAmt)*100)
    ArmorPerc=round((AAmt/MAAmt)*100)
    ShieldsPerc=round((SAmt/MSAmt)*100)
    CapacitorPerc=round((CAmt/MCAmt)*100)
    Hull=HAmt+" / "+MHAmt+" ("+HullPerc+"%)"
    Armor=AAmt+" / "+MAAmt+" ("+ArmorPerc+"%)"
    Shields=SAmt+" / "+MSAmt+" ("+ShieldsPerc+"%)"
    Capacitor=CAmt+" / "+MCAmt+" ("+CapacitorPerc+"%)"
    AAmt=Cache["Air",number]
    EAmt=Cache["Energy",number]
    CAmt=Cache["Coolant",number]
    MAAmt=Cache["Max Air",number]-6000
    MEAmt=Cache["Max Energy",number]-6000
    MCAmt=Cache["Max Coolant",number]-6000
    AirPerc=round((AAmt/MAAmt)*100)
    EnergyPerc=round((EAmt/MEAmt)*100)
    CoolantPerc=round((CAmt/MCAmt)*100)
    Air=AAmt+" / "+MAAmt+" ("+AirPerc+"%)"
    Energy=AAmt+" / "+MAAmt+" ("+AirPerc+"%)"
    Coolant=AAmt+" / "+MAAmt+" ("+AirPerc+"%)"
    LS=(Inputs[4,number]&AirPerc>10&CoolantPerc>10&EnergyPerc>10? 1 : 0)
    Power=(Inputs[5,number]&CoolantPerc>10&EnergyPerc<90? 1 : 0)
    Refine=(Inputs[6,number]&EnergyPerc>10 ? 1 : 0)
    signalSend(EGP2Sig,Scope)
}

#Doors
if((~D1Ent&D1Ent)|(~D2Ent&D2Ent)|signalClk(Group,BaseSig,Scope)){
    if(!Inputs[2,number]){
        D1=0
        D2=0
    }elseif(Inputs[2,number]==1){
        D1Valid=0
        D2Valid=0
        if(Inputs[1,number]){
            for(Loop=1, Whitelist:count()){
                if(D1Ent:name():find(Whitelist[Loop,string])){
                    D1Valid=1
                }
                if(D2Ent:name():find(Whitelist[Loop,string])){
                    D2Valid=1
                }
            }
        }else{
            D1Valid=1
            D2Valid=1
        }
        if(D1Valid){
            if(!D1){
                D1=1
                timer("D1",DoorTime)
            }else{
                D1=0
                stoptimer("D1")
            }
        }
        if(D2Valid){
            if(!D2){
                D2=1
                timer("D2",DoorTime)
            }else{
                D2=0
                stoptimer("D2")
            }
        }
    }elseif(Inputs[2,number]==2){
        D1=1
        D2=1
    }
}
if(clk("D1")&Inputs[2,number]==1){
    D1=0
}
if(clk("D2")&Inputs[2,number]==1){
    D2=0
}
