@name Miner Core
#Inputs
@inputs [Gyro Store Ent]:wirelink [Base]:vector
#Core
@persist [C]:entity [CPos]:vector [CAng]:angle
#Gyro
@persist [TarPosL]:vector [AimAngL LastAng]:angle
@outputs [VError AError Error]:number
#Miner
@outputs [Exclude]:array [Mode Find]:number [Crystal]:entity
@outputs [Mine]:number
@model models/Slyfo/interior_footlockerlid.mdl

if(dupefinished()){ #Duped
    reset()
}
#Core Update
    CPos = C:pos()
    CAng = C:angles()
#
if(first()){
    #E2
    runOnTick(1)
    rangerPersist(1)
    rangerHitWater(1)
    rangerHitEntities(1)
    entity():setColor(150,150,150)
    #Functions
    function gyroMove(N1:number,V1:vector,A1:angle){
        Gyro["Freeze",number] = N1
        Gyro["Lateral",number] = V1:x()
        Gyro["SpeedAbs",number] = V1:y()
        Gyro["Vertical",number] = V1:z()
        Gyro["PitchAbs",number] = A1:pitch()
        Gyro["YawAbs",number] = A1:yaw()
        Gyro["RollAbs",number] = A1:roll()
    }
    function number gyroMission(V1:vector,A1:angle){
        V2 = V1:distance(CPos)
        if(A1==ang()){
            A1 = (V1-CPos):toAngle()
            if(V2 < 250){
                A1 = LastAng:setPitch(0)
            }else{
                LastAng = A1
            }
        }
        TarPosL = C:toLocal(V1)
        TarPosL+= (TarPosL-C:velL())
        TarPosL = vec(-TarPosL:y(),TarPosL:x(),TarPosL:z())
        AimAngL = C:toLocal(A1):setRoll((abs(CAng:pitch())<85 ? 0-CAng:roll() : 0))
        VError = V2/10
        AError = vec(AimAngL):length()
        Error = (VError+AError)/2
        if(AError>0.1){
            TarPosL = vec()
        }
        gyroMove(0,TarPosL,AimAngL)
        return (Error<0.1 ? 1 : 0)
    }
    function findCrystal(){
        findExcludeEntities(Exclude)
        N1 = findByClass("inf_crystal")
        Crystal = findClosest(C:pos())
        Exclude:pushEntity(Crystal)
        print("finding crystal")
    }
    #Gyro
    C = Gyro:entity()
    Gyro["PitchMult",number] = 0.01
    Gyro["YawMult",number] = 0.01
    Gyro["RollMult",number] = 0.01
    #Miner
    Find = 0
    Crystal = noentity()
    Mode = 0
    Gyro["Activate",number] = 1
}
    
if(clk("Find")){
    findCrystal()
    Find = 0
}
if(Mode==0){
    if(gyroMission(Base,ang())){ #Move to base, add more later for queuing
        Mode = 1
        gyroMove(1,vec(),ang())
    }
}elseif(Mode==1){ #At base
    #dump contents
    Mode = 2
}elseif(Mode==2){ #Move to crystal
    if(!Crystal&Find==0){
        timer("Find",1000)
    }elseif(Crystal){
        if(gyroMission((Crystal:pos()+vec(0,0,250)),ang())){
            Mode = 3
            gyroMove(1,vec(),ang())
        }
    }
}elseif(Mode==3){
    if(Store["Infinitum",number]==Store["Max Infinitum",number]){
        Mine = 0
        Mode = 0
        print("Trigger")
    }else{
        if(!Crystal){
            Mine = 0
            Mode = 2
            print("noentity")
        }elseif(Crystal){
            Mine = 1
        }
    }
}elseif(Mode==4){
    #Ship is off, do nothing
}
