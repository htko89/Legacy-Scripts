# Author: Steeveeo
# Updated: November 22, 2010 @ 11:48 PST (-8 GMT)

# Use and Purpose:
# Place on a ship and say "weldcheck: start" to mark everything
# welded to it. Say "weldcheck: end" or delete the chip to clear
# marking.

# Fair Use and Legality:
# This chip is provided as is and is designed to work only
# as instructed. This is provided under Creative Commons and
# may be modified and/or shared with anyone as long as proper
# credit is given to the original author (Steeveeo). Failure to
# give credit by plagiarising or removing this header is subject
# to administrative punishment.

@name Weld Check
@inputs 
@outputs 
@persist Parts:array PartColors:array
@trigger 

runOnChat(1)
runOnLast(1)

#Startup
if(first()|dupefinished())
{
    
}

#Chat Control
if(chatClk(owner()))
{
    #Chat Parsing
    LastSaid = lastSaid():lower()
    Command = LastSaid:explode(": "):string(1)
    Args = LastSaid:explode(": "):string(2):explode(", ")
    
    if(Command == "weldcheck")
    {
        #Start Weld Coloring
        if(Args[1,string] == "start")
        {
            #Check if stuck on anything
            if(entity():isConstrained())
            {
                Parts = entity():getConstraints()
                for(Index = 1, Parts:count())
                {
                    PartColors[Index,vector4] = Parts[Index,entity]:getColor4()
                }
                
                print("[WELDCHECK] - Beginning Scan and Marking Welded Objects")
                timer("Mark",1000)
            }
            else
            {
                print("[WELDCHECK] - Chip is not attached to anything! Weld this chip on a contraption to start check.")
            }
        }
        
        #End, unmark all checks
        if(Args[1,string] == "end")
        {
            print("[WELDCHECK] - Unmarking all objects, end of weld check.")
            timer("Unmark",1000)
        }
    }
    
}

#Mark all welded objects sequentially
if(clk("Mark"))
{
    for(Index = 1, Parts:count())
    {
        Parts[Index,entity]:setColor(vec4(255,0,0,128))
    }
}

#Unmark if told to or chip removed
if(clk("Unmark") | last())
{
    for(Index = 1, Parts:count())
    {
        Parts[Index,entity]:setColor(PartColors[Index,vector4])
    }
}
