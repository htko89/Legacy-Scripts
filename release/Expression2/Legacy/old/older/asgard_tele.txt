@name Stacker
@inputs 
@outputs
@persist [E1 E2]:entity [POS]:vector [ANG]:angle [Props]:array
@persist [Rotate]:number
@trigger 

runOnTick(1)

Equipped=owner():weapon():type():find("laser")
Set=owner():keyAttack1()
Set2=owner():keyAttack2()
Use=owner():keyUse()

if(Equipped){
    if(Set){
        if(owner():aimEntity()){
            E1=owner():aimEntity()
        }else{
            E1=noentity()
        }
    }
    if(Set2){
        if(owner():aimEntity()){
            E2=owner():aimEntity()
        }else{
            E2=noentity()
        }
    }
    if(Use){
        timer("Send",1000)
        printColor(vec(255,0,0),"1 Second delay (to prevent abuse)")
    }
}
if(E1){
    POS=E1:pos()
    ANG=E1:angles()
    Rotate=1
}else{
    POS=owner():aimPos()
    Rotate=0
}
if(clk("Send")){
    if(E2){
        findClearBlackList() 
        findExcludeEntity(E1) 
        findByModel(E2:model())
        Props=findToArray()
        printColor(vec(255,0,0),"Moving "+Props:count()+" Props")
        for(Loop=1, Props:count()){
            Props[Loop,entity]:setPos(POS)
            if(Rotate){
                Props[Loop,entity]:setAng(ANG)
            }
        }
        if(Rotate){
            printColor(vec(255,0,0),"Rotated!")
        }else{
            printColor(vec(255,0,0),"Not Rotated!")
        }
    }else{
        printColor(vec(255,0,0),"No Models to Move!")
    }
}
