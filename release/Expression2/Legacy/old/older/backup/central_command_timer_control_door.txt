@name Central Command Timer Control Door
@inputs Reset:number
@inputs ClockSpeed:number InResult:array
@outputs OutResult:array
@persist OutResult:array #Persistent outputs.
@persist Timers:number Time:array Loop:number #System.
@persist TimeLeft:array TimeRun:array #Memory.
@trigger all

if(first()){ #System first start.
    #Initialization.
        signalSetGroup("CentralCommand")
        runOnSignal("CC",0,1)
    #Timer options.
        Timers=3 #number of timers.
        Time[1,number]=5000 #Time for timer.
        Time[2,number]=5000 #Time for timer.
        Time[3,number]=5000 #Time for timer.
}

#Set timer state and set out result.
for(Loop=1, Timers){ #Loop for each timer
    if(InResult[Loop,number]>0){ #If true.
        if(InResult[Loop,number]==1){ #If result is correct.
            TimeLeft[Loop,number]=Time[Loop,number] #Set timer time.
            TimeRun[Loop,number]=1 #Set timer state.
            OutResult[Loop,number]=1 #Set out result.
        }elseif(InResult[Loop,number]==2|InResult[Loop,number]==4){ #If result is typing or wrong.
            TimeLeft[Loop,number]=0 #Set timer time.
            TimeRun[Loop,number]=0 #Set timer state.
            OutResult[Loop,number]=0 #Set out result.
        }elseif(InResult[Loop,number]==3){ #If result is delete.
            TimeLeft[Loop,number]=0 #Set timer time.
            TimeRun[Loop,number]=0 #Set timer state.
            OutResult[Loop,number]=0 #Set out result.
        }
    }
}

#Run on signal
if(signalClk()){ #If signal time.
#End timer and return action if zero.
    for(Loop=1, Timers){ #Loop for each timer
        if(TimeRun[Loop,number]&TimeLeft[Loop,number]<=0){ #If timer is running and is zero.
            TimeRun[Loop,number]=0 #End timer
            OutResult[Loop,number]=0 #Set out result.
        }
    }
#Time reduction for enabled timers.
    for(Loop=1, Timers){ #Loop for each timer
        if(TimeRun[Loop,number]){ #If timer is running.
            TimeLeft[Loop,number]=TimeLeft[Loop,number]-ClockSpeed
        }
    }    
}

if(Reset){ #If reset is true
    for(Loop=1, Timers){ #Loop for each timer
        TimeLeft[Loop,number]=0
        TimeRun[Loop,number]=0
        OutResult[Loop,number]=0
    }
}
