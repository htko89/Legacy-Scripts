#Name
@name Disc Core

#Wirelinks
@inputs [Pod Eye Ent]:wirelink

#Variables
@outputs [Angle AngleMult]:angle 
@outputs [Control Thrust ThrustMult Speed SpeedMult]:vector
@outputs [Active]:number
@outputs [ShipCore]:entity [Forward Right Up]:vector

#Trigger
@trigger none

#Dupe Code
if(dupefinished()){
    reset()
}

#First Code
if(first()){
    runOnTick(1)
    #Set variables
    ShipCore=Ent["Entity1",entity]
    Speed=vec(20,40,2.5)
    SpeedMult=vec(0.4,0.8,0.05)
    AngleMult=ang(0.4,0.4,0.4)
    Eye["Enable", number]=1
}

#Set Variables
Forward=ShipCore:forward()
Right=ShipCore:right()
Up=ShipCore:up()
ShipPosition=ShipCore:pos()
Active=Pod["Active",number]

#Set Keyboard Control
Control=vec(Pod["D",number]-Pod["A",number],Pod["W",number]-Pod["S",number],Pod["Space",number]-Pod["Shift",number])

#Set Speed Control
ThrustMult=ThrustMult:setX((Control:x() ? ThrustMult:x()+SpeedMult:x() : 0))
ThrustMult=ThrustMult:setY((Control:y() ? ThrustMult:y()+SpeedMult:y() : 0))
ThrustMult=ThrustMult:setZ((Control:z() ? ThrustMult:z()+SpeedMult:z() : 0))
ThrustMult=clamp(ThrustMult,vec(0,0,0),Speed)

#Position and Angle Control
if(Active){
    Thrust=vec(0,0,0)
    Thrust+=Control:x()*Right*ThrustMult:x()
    Thrust+=Control:y()*Forward*ThrustMult:y()
    Thrust+=Control:z()*Up*ThrustMult:z()
    Angle+=ang(-Eye["Y",number]*AngleMult:pitch(),0,0)
    Angle+=ang(0,-Eye["X",number]*AngleMult:yaw(),0)
    Angle+=ang(0,0,-(Pod["TurnRightKey",number]-Pod["TurnLeftKey",number])*AngleMult:roll())
    Angle=angnorm(Angle)
}else{
    Thrust=vec(0,0,0)
    Angle=Forward:toAngle():setRoll(0)
}

#Movement
ShipCore:propGravity(0)
if(Pod["Active",number]){
    ShipCore:propFreeze(0)
    TarQ = quat(Angle)
    CurQ = quat(ShipCore)
    Q = TarQ/CurQ
    V = ShipCore:toLocal(rotationVector(Q)+ShipPosition)
    ShipCore:applyTorque((250*V - 35*ShipCore:angVelVector())*ShipCore:inertia())  
    ShipCore:applyForce((Thrust+$Thrust*10)*ShipCore:mass())
    ShipCore:applyAngForce(Pod["Alt",number]*-ShipCore:angVel()*ShipCore:mass())
    ShipCore:applyForce(Pod["Alt",number]*-ShipCore:vel()/10*ShipCore:mass())
    ShipCore:applyForce(-ShipCore:vel()/50*ShipCore:mass())
}else{
    if(!ShipCore:isPlayerHolding()){
        ShipCore:propFreeze(1)
    }
}
