@name Serpentis Core
@inputs [Pod Pod2 Entity Cam Eye Lock Light Text1 Text2]:wirelink [PodActive Mouse2 Flash Prev Next]:number
@outputs [On Thrust Fire1 Fire2 Reload1 Reload2]:number
@outputs [Debug]:array
@persist [BGColor Color]:vector
@persist [Owner Core Turret Chip]:entity
@persist [LockTime Mode PilotActive TurretActive Hover HoverGravity]:number
@persist [PilotHeading TurretHeading]:angle
@model models/hunter/plates/plate025x025.mdl

#initialization code
interval(45)
if(dupefinished()){
	reset()
}
if(first()){
	#set entities
		Owner=owner()
		Core=entity():isWeldedTo()
		Turret=Entity["Entity8",entity]
		Chip=entity()
		Color=vec(255,90,0)
	#set variables
		LockTime=3000
		PilotActive=1
		HoverGravity=1
	#set weights
		for(Loop=1,Core:hasConstraints("Weld")){
			Core:isWeldedTo(Loop):setMass(20)
		}
		Entity["Entity1",entity]:setMass(1000) #Wing Left 1
		Entity["Entity2",entity]:setMass(1000) #Wing Left 2
		Entity["Entity3",entity]:setMass(1000) #Wing Right 1
		Entity["Entity4",entity]:setMass(1000) #Wing Right 2
		Entity["Entity5",entity]:setMass(1000) #Nose 1
		Entity["Entity6",entity]:setMass(1000) #Nose 2
		Entity["Entity7",entity]:setMass(1000) #Base
	#set exceptional weights
		Pod["Entity",entity]:setMass(1) #Pilot seat
		Pod2["Entity",entity]:setMass(1) #Copilot seat
		Text1:entity():setMass(1)
		Text2:entity():setMass(1)
		Core:setMass(10000) #Core
		Turret:setMass(200) #Turret
	#set chips
		Chip:setMass(1)
		Pod:entity():setMass(1)
		Pod2:entity():setMass(1)
		Entity:entity():setMass(1)
		Cam:entity():setMass(1)
		Eye:entity():setMass(1)
		Lock:entity():setMass(1)
		Light:entity():setMass(1)
	#set Pod
		Pod["Crosshairs",number]=1
	#set light
		Light["RGB",vector]=Color
		Light["GlowBrightness",number]=10
		Light["GlowDecay",number]=2.5
		Light["GlowSize",number]=150
	#set text
		Text1["String",string]="1    X    I    N    F    U    S    I    O    N"
		Text1["FGColor",vector]=vec(255,255,255)
		Text1["BGColor",vector]=vec(20,20,20)
		Text2["String",string]="S    E    R    P    E    N    T    I    S"
		Text2["FGColor",vector]=vec(255,255,255)
		Text2["BGColor",vector]=vec(20,20,20)
	#set Hover
		Hover=1	
}

#Debug code
Debug[1,number]=ops()
Debug[2,number]=minquota()
Debug[3,number]=maxquota()

#Mode Code
#runs on trigger and if active, runs indefinitly
if(~PodActive&PodActive){
	Mode=1
	ModeChange=1
}
if(PodActive){
	if(~Mouse2&Mouse2){
		Mode=(Mode==1?2 : 1)
		ModeChange=1
	}
}else{
	Mode=0
}
Eye["Enable",number]=1

#Activation code
#always runs
if(Mode==1){
	timer("Turret",LockTime)
}elseif(Mode==2){
	TurretActive=1
	Lock["Activate",number]=0
}else{
	timer("Turret",LockTime)
}
if(clk("Turret")){
	Lock["Activate",number]=1
	TurretActive=0
}

#Heading code
#always runs
if(Mode==1){
	PilotHeading+=angnorm(ang(-clamp(Eye["Y",number]/4,-11,11),-clamp(Eye["X",number]/4,-99,9),0))
	TurretHeading=(Core:forward()):toAngle()
}elseif(Mode==2){
	PilotHeading=(Core:forward()):toAngle():setRoll(0):setPitch(0)
	TurretHeading+=angnorm(ang(-clamp(Eye["Y",number]/4,-11,11),-clamp(Eye["X",number]/4,-99,9),0))
}else{
	PilotHeading=(Core:forward()):toAngle():setRoll(0):setPitch(0)
	TurretHeading=(Core:forward()):toAngle()
}

#Orientation code
#always running until timer stops
if(PilotActive&clk()){        
	TarQ=quat(PilotHeading)
	CurQ=quat(Core)
	Quat=TarQ/CurQ 
	Vec=Core:toLocal(rotationVector(Quat)+Core:pos()) 
	Core:applyTorque((200*Vec-60*Core:angVelVector())*Core:inertia())
}
if(TurretActive&clk()){
	TarQ=quat(TurretHeading)
	CurQ=quat(Turret)
	Quat=TarQ/CurQ 
	Vec=Turret:toLocal(rotationVector(Quat)+Turret:pos()) 
	Turret:applyTorque((200*Vec-60*Turret:angVelVector())*Turret:inertia())
}

#Movement code
if(PilotActive){
	WS=Pod["W",number]*1+Pod["S",number]*-1
	DA=Pod["D",number]*1+Pod["A",number]*-1
	UD=Pod["Space",number]*1+Pod["Shift",number]*-1
	if(clk()){
		Core:applyForce(Core:forward()*WS*Core:mass()*20)
		Core:applyForce(Core:right()*DA*Core:mass()*10)
		Core:applyForce(Core:up()*UD*Core:mass()*10)
	}
	if(~Flash&Flash){
		Hover=(Hover==1?0 : 1)
	}
	if(~Prev&Prev){
		HoverGravity+=0.01
	}
	if(~Next&Next){
		HoverGravity-=0.01
	}			
}
if(Hover&clk()){
	Core:applyForce(vec(0, 0, 20500 * 3 * gravity()*HoverGravity - Core:vel():z()) / 66.566669)
}

#Braking code
if(Mode){
	if(Pod["Alt",number]){
		Brake=1
	}
}else{
	Brake=1
}
if(Brake){
	Core:applyForce(-Core:vel()*Core:mass()/3)
	Core:applyAngForce(-Core:angVel()*Core:mass()/3)
}

#Camera code
#needs to only run once on mode change
Cam["Activated",number]=PodActive
if(ModeChange){
	if(Mode==1){
		Cam["Parent",entity]=Core
		Cam["Position",vector]=Core:pos()-Core:forward()*800+Core:up()*100
		Cam["Direction",vector]=Core:forward()
	}elseif(Mode==2){
		Cam["Parent",entity]=Turret
		Cam["Position",vector]=Turret:pos()+Turret:forward()*40
		Cam["Direction",vector]=Turret:forward()
	}
}

#Effects code
On=PodActive-Pod["S",number]
if(~PodActive&PodActive){  
	Pod["Entity",entity]:hintDriver("Ship is controlled by keyboard and mouse | Controls",5)
	Pod["Entity",entity]:hintDriver("Ctrl=Fix Camera | Controls",5)
	Pod["Entity",entity]:hintDriver("E=Exit | Controls",5)
	Pod["Entity",entity]:hintDriver("WASD=Move, Space=Up, Shift=Down, Alt=Stop | Controls",5)
	Pod["Entity",entity]:hintDriver("Mousewheel=Change gravity, F=Hover mode toggle | Controls",5) 
	Pod["Entity",entity]:hintDriver("Move Mouse to aim | Controls",5) 
	Pod["Entity",entity]:hintDriver("Mouse2=Pilot/Turret mode toggle | Weapons",5) 
	Pod["Entity",entity]:hintDriver("Mouse1=Shoot, R=Reload | Weapons",5) 
}
if(Mode){
	Thrust=Pod["W",number]
}

#Firing code
if(Mode==1){
	Fire1=Pod["Mouse1",number]
	Reload1=Pod["R",number]
}elseif(Mode==2){
	Fire2=Pod["Mouse1",number]
	Reload2=Pod["R",number]
}
