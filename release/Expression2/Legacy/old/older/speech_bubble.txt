@name Speech Bubble
@inputs 
@outputs 
@persist Player:array [Players Holos]:number Yaw:angle
@trigger 

runOnTick(1)
Player=players()
Players=Player:count()
if(first()){
    holoDeleteAll()
    for(Loop=1, Players){
        holoCreate(Loop)
        holoShadow(Loop,0)
        holoAlpha(Loop,0)
        holoModel(Loop,"models/extras/info_speech.mdl") 
        Holos++
    } Loop=0
}
if(Holos<Players){
    for(Loop=1, Players-Holos){
        holoCreate(Loop)
        holoShadow(Loop,0)
        holoAlpha(Loop,0)
        holoModel(Loop,"models/extras/info_speech.mdl") 
        Holos++
    } Loop=0
}elseif(Holos>Players){
    for(Loop=1, Holos-Players){
        holoDelete(Holos)
        Holos--
    } Loop=0
}

for(Loop=1, Holos){
    holoAng(Loop,ang(0,realtime()*180,0))
    holoPos(Loop,Player[Loop,entity]:pos()+vec(0,0,90))
    holoAlpha(Loop,Player[Loop,entity]:isTyping()*255)
} Loop=0
