@name Personal Helper
@inputs [ASLink SLink CLink Cache]:wirelink [ASInput SInput CInput]:number
@outputs [ASActive AShield AStrength AStress SActive SShield SStrength CActive Cloak]:number
@outputs [XEnergy]:number
@persist [Active Die]:number [HelpCore Owner]:entity [AttachPos]:vector
@trigger none

#Dupe Code
if(dupefinished()){
    reset()
}

runOnTick(1)
timer("Interval",1000)
if(first()){
    HelpCore=entity():isWeldedTo()
    Owner=owner()
}
if(clk("Interval")){
    AShield=ASLink["Active",number]
    AStrength=ASLink["Strength",number]
    AStress=ASLink["Stress",number]
    SShield=SLink["Active",number]
    SStrength=SLink["Strength",number]
    Cloak=CLink["Active",number]
    XEnergy=Cache["Energy",number]/Cache["Max Energy",number]
}
ASActive=ASInput
SActive=SInput
CActive=CInput
AttachPos=Owner:attachmentPos("eyes")
if(Owner:keyUse()&Owner:aimEntity()==entity()){
    timer("Delay",250)
}
if(clk("Delay")){
    Active=1
    if(Active){
        entity():parentTo(HelpCore)
        HelpCore:setMass(1000)
        HelpCore:propNotSolid(1)
        HelpCore:setAlpha(1)
        HelpCore:propFreeze(0)
        for(Loop=1,HelpCore:hasConstraints("Weld")){
            HelpCore:isWeldedTo(Loop):setMass(1)
            HelpCore:isWeldedTo(Loop):propNotSolid(1)
            HelpCore:isWeldedTo(Loop):setAlpha(1)
            HelpCore:isWeldedTo(Loop):propFreeze(0)
        } Loop=0
        HelpCore:parentTo(owner())
    }
}

if(Active){
    if($AttachPos:length()>150){
        Die=1
    }
    if(Die){
        ASActive=0
        SActive=0
        CActive=0
        HelpCore:propDelete()
    }else{
        HelpCore:setAlpha(1)
        for(Loop=1,HelpCore:hasConstraints("Weld")){
            HelpCore:isWeldedTo(Loop):setAlpha(1)
        } Loop=0
        HelpCore:setPos(AttachPos)
        HelpCore:setAng(ang(0,0,0))
    }
}
