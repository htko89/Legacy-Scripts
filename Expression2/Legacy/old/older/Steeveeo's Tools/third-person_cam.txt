# Author: Steeveeo
# Updated: November 19, 2010 @ 11:03 PM PST (-8 GMT)

# Use and Purpose:
# Hide this chip somewhere and say "camera: on" to change your
# view to an over-the-shoulder third-person camera. Say
# "camera: off" or undo the chip to turn this off.
#
# Note: This is also useful for if your camera gets screwed up
# by those pesky CamControllers, or if you want to learn how
# powerful the SetView function is.

# Fair Use and Legality:
# This chip is provided as is and is designed to work only
# as instructed. This is provided under Creative Commons and
# may be modified and/or shared with anyone as long as proper
# credit is given to the original author (Steeveeo). Failure to
# give credit by plagiarising or removing this header is subject
# to administrative punishment.

@name Third-Person Cam
@inputs 
@outputs 
@persist On
@trigger 

runOnChat(1)

if(chatClk(owner()))
{
    #Chat Parsing
    LastSaid = lastSaid():lower()
    Command = LastSaid:explode(": "):string(1)
    Args = LastSaid:explode(": "):string(2):explode(", ")
    
    if(Command == "camera")
    {
        if(Args[1,string] == "on")
        {
            if(!On)
            {
                On = 1
                timer("Apply Camera",100)
            }
            else
            {
                print("[TPC] - Camera Already Active!")
            }
        }
        elseif(Args[1,string] == "off")
        {
            On = 0
            stoptimer("Death Check")
            stoptimer("Respawn Check")
            timer("Remove Cam",100)
        }
        else
        {
            print("Argument Not Recognized")
        }
    }
}

#Remove Camera
if(last()|clk("Remove Cam"))
{
    owner():setView(0,vec(),ang())           
}

#Set up the camera
if(clk("Apply Camera"))
{
    #Camera Position
    Multiplier = owner():height()/72 #Default height is 72
    CamPos = owner():pos()
    CamPos -= owner():forward()*(75*Multiplier*2)
    CamPos += owner():up()*(75*Multiplier)
    CamPos += owner():right()*(15*Multiplier)
    
    CamAng = ((owner():pos()+vec(0,0,owner():height())) - (CamPos-owner():right()*(15*Multiplier))):toAngle()
    owner():setView(1,CamPos,CamAng)
    
    Cam = getSetViewEnt()
    Cam:parentTo(owner())
    
    timer("Death Check",100)
}

#Check for user death
if(clk("Death Check"))
{
    if(changed(owner():isAlive()) & !owner():isAlive())
    {
        timer("Remove Cam",100)
        timer("Respawn Check",100)
    }
    else
    {
        timer("Death Check",100)
    }
}

#Check if respawned after death
if(clk("Respawn Check"))
{
    if(owner():isAlive())
    {
        timer("Apply Camera",100)
    }
    else
    {
        timer("Respawn Check",100)
    }
}
