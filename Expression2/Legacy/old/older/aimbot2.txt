@name AimBot2
@inputs Entity:entity
@outputs [Ready Fire Equipped Found]:number Name:string [AimEntity FoundOwner]:entity
@persist E:entity Enti:entity Player Health:number Players:array
@persist [TarVector FloatVector InputPos TarP PreP]:vector
@persist [RD]:ranger
@model

runOnTick(1)

if(dupefinished()){
    reset()
}

Equipped=(owner():weapon():type():find("physgun") ? 1 : 0)
Fire=(Equipped&owner():keyAttack1() ? 1 : 0)

#Movement Code
if(first()){
    findClearBlackList()
    findClearWhiteList() 
    findIncludePlayerProps(owner())
    findAllowModel("w_smg1")
    Found=findInSphere(entity():pos(),500) 
    E=findClosest(entity():pos())
    FoundOwner=E:owner()
    if(!Found|FoundOwner!=owner()){
        reset()
    }
    E:setMass(64)
    for(Loop=1,E:hasConstraints("Weld")){
        E:isWeldedTo(Loop):setMass(1)
    }
    Players=players()
}
InputPos=owner():pos()+vec(0,10,80)
#InputPos=Enti:pos()+vec(0,10,80)
#AimPos=owner():aimPos()
timer("wooting",10000)
if(clk("wooting")){
    Players=players()
}
if(->Entity){
    Enti=Entity
    PreP=Enti:boxCenterW()
    TarP=PreP+$PreP
}

if(!->Entity){
    if(Equipped&owner():keyAttack2()){
        timer("test",200)
    }
}
if(!->Entity){
    if(clk("test")){
        Player=(Player<Players:count()? Player+1 : 0)
    }
}
if(!->Entity){
    for(Loop=1, Players:count()){
        if(Players[Loop,entity]==owner()|Players[Loop,entity]:isSuperAdmin()|Players[Loop,entity]:isAdmin()){
            Players:remove(Loop)
        }
    }
    Player=(Player>Players:count()? 0 : Player)
    #if(!owner():isAlive()){
    #    for(Loop=1,Players:count()){
    #        Player=(Players[Loop,entity]==owner() ? Loop : Player)
    #    } Loop=1
    #}
    Enti=Players[Player,entity]
}
if(!->Entity){
    PreP=Enti:boxCenterW()
    TarP=PreP+$PreP
}
if(Enti==owner()){
    Offset=50
}else{
    Offset=0
}
Name=Enti:name()
CurP=E:pos()
TarVector=(TarP-CurP)
TarQ = quat(TarVector:toAngle())
CurQ = quat(E)
Q = TarQ/CurQ
V = E:toLocal(rotationVector(Q)+E:pos())
if(Equipped){
    E:applyTorque((350*V - 10*E:angVelVector())*E:inertia())  
}
FloatVector=((!InputPos ? TarP-Enti:eye()*30 : InputPos)-CurP)
E:applyForce((15*FloatVector+$FloatVector*50)*E:mass())
RD=rangerOffset(100000,CurP,E:forward())
AimEntity=RD:entity()
if(Equipped){
    Ready=((AimEntity==Enti)&!AimEntity:isWorld()|Fire ? 1 : 0)
}else{
    Ready=0
}
timer("test",2000)
