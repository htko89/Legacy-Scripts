@name Staff Prediction
@inputs TargetE:entity
@outputs  OutX OutY OutZ Explode Fire1 Fire2 Vec:vector
@persist Exp Distance ProVel X2:vector GX GY GZ SX SY SZ 
@persist X Y Z Dist2 Dist1 SMod Time2 Time 
runOnTick(1)
#Beacon
Bear = entity():bearing( TargetE:pos() )
Elev = entity():elevation( TargetE:pos() )
X2 = entity():pos()
GX = entity():pos():x()
GY = entity():pos():y()
GZ = entity():pos():z()
X = TargetE:pos():x()
Y = TargetE:pos():y()
Z = TargetE:pos():z()
SX = TargetE:vel():x()
SY = TargetE:vel():y()
SZ = TargetE:vel():z()
Distance = TargetE:pos():distance(X2)
#Prediction
SMod = 0 #change for cinematically innacurate results#
#Time2 = (Distance/3333)#staff
Time2 = (Distance/1886.6)
#Time2 = (Distance/1981.1)

OutX = (X + (SX * Time2))+ randint(((SMod*Time2)*-1),(SMod*Time2))
OutY = (Y + (SY * Time2))+ randint(((SMod*Time2)*-1),(SMod*Time2))
OutZ = (Z + (SZ * Time2))+ randint(((SMod*Time2)*-1),(SMod*Time2))
Angle1 = atan((GX-OutX)/(GY-OutY))
Dist1 = (GX-OutX)/sin(Angle1)
Angle2 = atan((GZ-OutZ)/(Dist1))
Dist2 = (GZ-OutZ)/sin(Angle2)
#ExpDis
if (Dist2 < 0) {Exp = Dist2 * -1}
if (Dist2 > 0) {Exp = Dist2}
if (Exp < 750) {Explode = 750}
if (Exp > 750) {Explode = Exp+150}

Vec = vec(OutX,OutY,OutZ)
