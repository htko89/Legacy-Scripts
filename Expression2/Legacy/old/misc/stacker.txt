@name Stacker
@inputs 
@outputs
@persist [Entity]:entity
@persist [Props]:array
@persist [POS]:vector [ANG]:angle
@persist [Equipped Set Set2 Use Delete]:number
@trigger 

runOnTick(1)

#Dupe Code
if(dupefinished()){
    reset()
}

#First Code
First=first()

#Instructions:
#"MOUSE1" to select main prop
#"MOUSE2" to select secondary props
#"USE" to move secondary props to main

#change "Delete" variable to set whether
#it will delete main prop after move
if(First){
    Delete=0
}

#Do not change any code below.
if(First){
    Entity=noentity()
    Props=array()
}

Equipped=owner():weapon():type():find("laser")
Set=owner():keyAttack1()
Set2=owner():keyAttack2()
Use=owner():keyUse()

if(Equipped){
    if($Set>0){
        if(owner():aimEntity()){
            Entity=owner():aimEntity()
            printColor(vec(255,0,0),"Main Entity Selected!")
        }else{
            Entity=noentity()
            printColor(vec(255,0,0),"Main Entity Cleared!")
        }
    }
    if($Set2>0){
        if(owner():aimEntity()){
            Props:pushEntity(owner():aimEntity())
            printColor(vec(255,0,0),"Secondary Entity(s) Selected! (Total: ",Props:count()," Props)")
        }else{
            Props=array()
            printColor(vec(255,0,0),"Secondary Entity(s) Cleared!")
        }
    }
    if($Use>0){
        if(!Entity){
            printColor(vec(255,0,0),"No Main Entity Selected!")
            printColor(vec(255,0,0),"Aborting Move!")
        }
        if(!Props:count()){
            printColor(vec(255,0,0),"No Secondary Entity(s) Selected!")
            printColor(vec(255,0,0),"Aborting Move!")
        }
        if(Entity&Props:count()){
            timer("Send",1000)
            printColor(vec(255,255,255),"Moving ",vec(0,255,0),Props:count(),vec(255,255,255)," Props!")
            printColor(vec(255,0,0),"1 Second delay (to prevent repeat execution)")
        }
    }
}
if($Equipped<0){
    Entity=noentity()
    printColor(vec(255,0,0),"Main Entity Cleared!")
    Props=array()
    printColor(vec(255,0,0),"Secondary Entity(s) Cleared!")
}
if(clk("Send")){
    POS=Entity:pos()
    ANG=Entity:angles()
    Entity:propFreeze(1)
    if(Delete){
        Entity:propDelete()
        printColor(vec(255,0,0),"Main Entity Deleted!")
    }
    Entity=noentity()
    for(Loop=1, Props:count()){
        Props[Loop,entity]:setPos(POS)
        Props[Loop,entity]:setAng(ANG)
        Props[Loop,entity]:propFreeze(1)
    }
    Props=array()
    
}
