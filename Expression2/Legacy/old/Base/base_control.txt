@name Base Control
#I/O
@inputs [Core Ent Cache Raw Product]:wirelink
@inputs [CDoor GDoor CBlinds GBlinds]:number
@outputs [Whitelist]:array
@persist [InteractionSig ControlSig Group]:string [Scope]:number
#Base Status
@outputs [Hull Armor Shields Capacitor]:string
@persist [HullPerc ArmorPerc ShieldsPerc CapacitorPerc]:number
#Resource Status
@outputs [Air Energy Coolant]:string
@persist [AirPerc EnergyPerc CoolantPerc]:number
#Door
@inputs [D1 D2 D3 D4]:number
@inputs [D1Ent D2Ent D3Ent D4Ent]:entity
@outputs [D1Open D2Open D3Open D4Open]:number
@persist [DoorTime]:number
#Blinds
@persist [CAlpha CAlphaStep]:number
@persist [GAlpha GAlphaStep]:number
@persist [AlphaStep AlphaTime]:number
#Energy and Refinery
@inputs [InRefine InPower]:number
@outputs [OutRefine OutPower]:number

#Dupe Code
if(dupefinished()){
    reset()
}

#First Code
if(first()){
    InteractionSig="Interaction"
    ControlSig="Control"
    Group="Base"
    Scope=0
    signalSetGroup(Group)
    runOnSignal(ControlSig,Scope,1) 
    #Function Preset
    AlphaStep=10
    AlphaTime=50
    Whitelist[1,string]="1xinfusion"
    Whitelist[2,string]="Flyyte"
    Whitelist[2,string]="Braade"
    DoorTime=5000
    D1Open=0
    D2Open=0
    D3Open=0
    D4Open=0
}

timer("Status",1000)
if(clk("Status")){
    HAmt=Core["Hull",number]
    AAmt=Core["Armor",number]
    SAmt=Core["Shield",number]
    CAmt=Core["Capacitor",number]
    MHAmt=Core["Max Hull",number]
    MAAmt=Core["Max Armor",number]
    MSAmt=Core["Max Shield",number]
    MCAmt=Core["Max Capacitor",number]
    HullPerc=round((HAmt/MHAmt)*100)
    ArmorPerc=round((AAmt/MAAmt)*100)
    ShieldsPerc=round((SAmt/MSAmt)*100)
    CapacitorPerc=round((CAmt/MCAmt)*100)
    Hull=HAmt+" / "+MHAmt+" ("+HullPerc+"%)"
    Armor=AAmt+" / "+MAAmt+" ("+ArmorPerc+"%)"
    Shields=SAmt+" / "+MSAmt+" ("+ShieldsPerc+"%)"
    Capacitor=CAmt+" / "+MCAmt+" ("+CapacitorPerc+"%)"
    AAmt=Cache["Air",number]
    EAmt=Cache["Energy",number]
    CAmt=Cache["Coolant",number]
    MAAmt=Cache["Max Air",number]-6000
    MEAmt=Cache["Max Energy",number]-6000
    MCAmt=Cache["Max Coolant",number]-6000
    AirPerc=round((AAmt/MAAmt)*100)
    EnergyPerc=round((EAmt/MEAmt)*100)
    CoolantPerc=round((CAmt/MCAmt)*100)
    Air=AAmt+" / "+MAAmt+" ("+AirPerc+"%)"
    Energy=AAmt+" / "+MAAmt+" ("+AirPerc+"%)"
    Coolant=AAmt+" / "+MAAmt+" ("+AirPerc+"%)"
    OutRefine=(InRefine&EnergyPerc>10 ? 1 : 0)
    OutPower=(InPower&CoolantPerc>10&EnergyPerc<90? 1 : 0)
    signalSend(InteractionSig,Scope)
}

#Doors
if(!CDoor){
    D1Open=0
    D2Open=0
}elseif(CDoor==1){
    if($D1>0){
        Auth=0
        for(Loop=1, Whitelist:count()){
            if(D1Ent:name():find(Whitelist[Loop,string])){
                Auth=1
            }
        }
        if(Auth){
            if(!D1Open){
                D1Open=1
                timer("D1",DoorTime)
            }else{
                D1Open=0
                stoptimer("D1")
            }
        }
    }
    if($D2>0){
        Auth=0
        for(Loop=1, Whitelist:count()){
            if(D2Ent:name():find(Whitelist[Loop,string])){
                Auth=1
            }
        }
        if(Auth){
            if(!D2Open){
                D2Open=1
                timer("D2",DoorTime)
            }else{
                D2Open=0
                stoptimer("D2")
            }
        }
    }
    if(clk("D1")){
        D1Open=0
    }
    if(clk("D2")){
        D2Open=0
    }
}elseif(CDoor==2){
    D1Open=1
    D2Open=1
}
if(!GDoor){
    D3Open=0
    D4Open=0
}elseif(GDoor==1){
    if($D3>0){
        Auth=0
        for(Loop=1, Whitelist:count()){
            if(D3Ent:name():find(Whitelist[Loop,string])){
                Auth=1
            }
        }
        if(Auth){
            if(!D3Open){
                D3Open=1
                timer("D3",DoorTime)
            }else{
                D3Open=0
                stoptimer("D3")
            }
        }
    }
    if($D4>0){
        Auth=0
        for(Loop=1, Whitelist:count()){
            if(D4Ent:name():find(Whitelist[Loop,string])){
                Auth=1
            }
        }
        if(Auth){
            if(!D4Open){
                D4Open=1
                timer("D4",DoorTime)
            }else{
                D4Open=0
                stoptimer("D4")
            }
        }
    }
    if(clk("D3")){
        D3Open=0
    }
    if(clk("D4")){
        D4Open=0
    }
}elseif(GDoor==2){
    D3Open=1
    D4Open=1
}

#Blinds
if(~CBlinds|first()){
    CAlphaStep=AlphaStep*(CBlinds ? 1 : -1)
    timer("CAlpha", AlphaTime)
}
if(~GBlinds|first()){
    GAlphaStep=AlphaStep*(GBlinds ? 1 : -1)
    timer("GAlpha", AlphaTime)
}
if(clk("CAlpha")){
    CAlpha=clamp(CAlpha+CAlphaStep,0,255)
    Ent["Entity3",entity]:setAlpha(CAlpha)
    Ent["Entity4",entity]:setAlpha(CAlpha)
    if(CAlpha!=0&CAlpha!=255){
        timer("CAlpha", AlphaTime)
    }
}
if(clk("GAlpha")){
    GAlpha=clamp(GAlpha+GAlphaStep,0,255)
    Ent["Entity5",entity]:setAlpha(GAlpha)
    Ent["Entity6",entity]:setAlpha(GAlpha)
    if(GAlpha!=0&GAlpha!=255){
        timer("GAlpha", AlphaTime)
    }
}
