@name EGP Control 1

#Variables
@persist [EgpSig BaseSig Group]:string [Scope]:number
@persist [Owner]:entity
@persist [First CellHeight Margin Min Max]:number
@persist [TSize T1Height T2Height T3Height]:number
@persist [ESize E1Height]:number
@persist [MSize MAlpha Click]:number
@persist [Red Orange Green]:vector
@persist [AColor BColor CColor DColor]:vector

#EGP
@persist [Control Data Text Element]:array [Mouse]:number
@inputs [EGP]:wirelink [User]:entity

#I/O
@persist [Auth]:number
@persist [Whitelist]:array
@outputs [Doors Blinds LS Power Refine]:number

@trigger 

#Dupe Code
if(dupefinished()){
    reset()
}

#First Code
First=first()
if(First){
    Whitelist[1,string]="1xinfusion"
    #Function Preset
    Auth=1
    Doors=1
    Blinds=0
    LS=1
    Power=1
    Refine=1
    #Variables
    EgpSig="EGP Control"
    BaseSig="Base Control"
    Group="Base"
    Scope=0
    signalSetGroup(Group)
    runOnSignal(EgpSig,Scope,1) 
    Owner=owner()
    CellHeight=30 #Height of cells
    Margin=10
    Min=0
    Max=512
    TSize=CellHeight/2.5 #Text Size. preferably 0.4x of Cellheight
    T1Height=(CellHeight-TSize)/2 #Position Offsets
    T2Height=(CellHeight-TSize*2)/3 #Position Offsets
    T3Height=T2Height*2+TSize #Position Offsets
    ESize=CellHeight/1.1 #Button Size
    E1Height=(CellHeight-ESize/2)/2 #Position Offsets
    MSize=5 #Mouse Size
    MAlpha=200
    Red=vec(255,0,0)
    Orange=vec(255,150,0)
    Green=vec(0,255,0)
    AColor=vec(80,80,80)#vec(244,244,244) #box
    BColor=vec(40,40,40)#vec(200,200,200) #bg
    CColor=vec(200,200,200)#vec(100,100,100) #bgtext & boxoutline
    DColor=vec(244,244,244)#vec(11,11,11) #boxtext
}
if(First){
    #Define Controls
    Index=0
    Index++, Control[Index,string]="T1",      Data[Index,string]="Screen Controls"
    Index++, Control[Index,string]="Box",     Data[Index,number]=1
    Index++, Control[Index,string]="T2",      Data[Index,string]="Authorisation"
    Index++, Control[Index,string]="T3",      Data[Index,string]="Whitelist"
    Index++, Control[Index,string]="Element", Data[Index,string]=""
    Index++, Control[Index,string]="T1",      Data[Index,string]="Base Controls"
    Index++, Control[Index,string]="Box",     Data[Index,number]=5
    Index++, Control[Index,string]="T2",      Data[Index,string]="Doors"
    Index++, Control[Index,string]="T3",      Data[Index,string]="Off"
    Index++, Control[Index,string]="Element", Data[Index,string]=""
    Index++, Control[Index,string]="T2",      Data[Index,string]="Blinds"
    Index++, Control[Index,string]="T3",      Data[Index,string]="Off"
    Index++, Control[Index,string]="Element", Data[Index,string]=""
    Index++, Control[Index,string]="T2",      Data[Index,string]="Life Support"
    Index++, Control[Index,string]="T3",      Data[Index,string]="Off"
    Index++, Control[Index,string]="Element", Data[Index,string]=""
    Index++, Control[Index,string]="T2",      Data[Index,string]="Fusion Reactors"
    Index++, Control[Index,string]="T3",      Data[Index,string]="Off"
    Index++, Control[Index,string]="Element", Data[Index,string]=""
    Index++, Control[Index,string]="T2",      Data[Index,string]="Ice Refinery"
    Index++, Control[Index,string]="T3",      Data[Index,string]="Off"
    Index++, Control[Index,string]="Element", Data[Index,string]=""
}
if(First){
    #Init
    EGP:egpDrawTopLeft(1), EGP:egpClear(), Text:clear(), Element:clear()
    #Draw Objects
    Cell=0, Index=0
    Index++, EGP:egpBox(Index,vec2(Min,Min),vec2(Max,Max)), EGP:egpColor(Index,BColor)
             EGP:entity():setColor(AColor)
    for(Loop=1, Control:count()){
        #[]# if(Control[Loop,string]=="T1"){
            Index++, EGP:egpText(Index,Data[Loop,string],vec2(Margin*2,CellHeight*Cell+T1Height))
                     EGP:egpSize(Index,TSize), EGP:egpColor(Index,CColor)
            Cell++
        }elseif(Control[Loop,string]=="Box"){
            Index++, EGP:egpRoundedBox(Index,vec2(Margin,CellHeight*Cell),vec2(Max-Margin*2,CellHeight*Data[Loop,number]))
                     EGP:egpColor(Index,AColor)
            Index++, EGP:egpRoundedBoxOutline(Index,vec2(Margin,CellHeight*Cell),vec2(Max-Margin*2,CellHeight*Data[Loop,number]))
                     EGP:egpColor(Index,CColor)
        }elseif(Control[Loop,string]=="T2"){
            if(Control[Loop-1,string]!="Box"){
                Index++, EGP:egpLine(Index,vec2(Margin,CellHeight*Cell),vec2(Max-Margin,CellHeight*Cell))
                         EGP:egpColor(Index,CColor)
            }
            Index++, EGP:egpText(Index,Data[Loop,string],vec2(Margin*2,CellHeight*Cell+T2Height))
                     EGP:egpSize(Index,TSize), EGP:egpColor(Index,DColor)
            Cell++
        }elseif(Control[Loop,string]=="T3"){
            Index++, EGP:egpText(Index,Data[Loop,string],vec2(Margin*2,CellHeight*(Cell-1)+T3Height))
                     EGP:egpSize(Index,TSize), EGP:egpColor(Index,CColor), Text:pushNumber(Index)
        }elseif(Control[Loop,string]=="Element"){
            Index++, EGP:egpRoundedBox(Index,vec2(Max-Margin*2-ESize,CellHeight*(Cell-1)+E1Height),vec2(ESize,ESize/2))
                     EGP:egpColor(Index,BColor), Element:pushNumber(Index)
            Index++, EGP:egpRoundedBoxOutline(Index,vec2(Max-Margin*2-ESize,CellHeight*(Cell-1)+E1Height),vec2(ESize,ESize/2))
                     EGP:egpColor(Index,CColor)
        }
    } Loop=0
    Index++, EGP:egpCircle(Index,vec2(0,0),vec2(MSize,MSize))
             EGP:egpColor(Index,DColor), EGP:egpAlpha(Index,MAlpha), EGP:egpParentToCursor(Index)
    Index++, EGP:egpCircleOutline(Index,vec2(0,0),vec2(MSize,MSize))
             EGP:egpColor(Index,AColor), EGP:egpAlpha(Index,MAlpha), EGP:egpParentToCursor(Index), Mouse=Index
}
if(First|(~User&User)){ 
    Valid=0
    if(Auth){
        for(Loop=1, Whitelist:count()){
            if(User:name():find(Whitelist[Loop,string])){
                Valid=1
            }
        }
    }else{
        Valid=1
    }
    if(Valid){
        EGP:egpColor(Mouse,Red)
        Index=Element[1,number]
        if(inrange(EGP:egpCursor(User),EGP:egpPos(Index),EGP:egpPos(Index)+EGP:egpSize(Index))){
            Auth=(Auth ? 0 : 1)
        }
        Index=Element[2,number]
        if(inrange(EGP:egpCursor(User),EGP:egpPos(Index),EGP:egpPos(Index)+EGP:egpSize(Index))){
            Doors=(Doors<2 ? Doors+1 : 0)
        }
        Index=Element[3,number]
        if(inrange(EGP:egpCursor(User),EGP:egpPos(Index),EGP:egpPos(Index)+EGP:egpSize(Index))){
            Blinds=(Blinds ? 0 : 1)
        }
        Index=Element[4,number]
        if(inrange(EGP:egpCursor(User),EGP:egpPos(Index),EGP:egpPos(Index)+EGP:egpSize(Index))){
            LS=(LS ? 0 : 1)
        }
        Index=Element[5,number]
        if(inrange(EGP:egpCursor(User),EGP:egpPos(Index),EGP:egpPos(Index)+EGP:egpSize(Index))){
            Power=(Power ? 0 : 1)
        }
        Index=Element[6,number]
        if(inrange(EGP:egpCursor(User),EGP:egpPos(Index),EGP:egpPos(Index)+EGP:egpSize(Index))){
            Refine=(Refine ? 0 : 1)
        }
    }
    Index=Text[1,number]
    Index2=Element[1,number]
    EGP:egpSetText(Index,(Auth ? "Authorized Users Only" : "Open To Public"))
    EGP:egpColor(Index2,(Auth ? Orange : Green))
    Index=Text[2,number]
    Index2=Element[2,number]
    if(Doors==0){
        EGP:egpSetText(Index,"Closed"), EGP:egpColor(Index2,Red)
    }elseif(Doors==1){
        EGP:egpSetText(Index,"Authorized Users Only"), EGP:egpColor(Index2,Orange)
    }elseif(Doors==2){
        EGP:egpSetText(Index,"Open To Public"), EGP:egpColor(Index2,Green)
    }
    Index=Text[3,number]
    Index2=Element[3,number]
    EGP:egpSetText(Index,(Blinds ? "Powered" : "Off"))
    EGP:egpColor(Index2,(Blinds ? Green : Red))
    Index=Text[4,number]
    Index2=Element[4,number]
    EGP:egpSetText(Index,(LS ? "Automatic" : "Off"))
    EGP:egpColor(Index2,(LS ? Green : Red))
    Index=Text[5,number]
    Index2=Element[5,number]
    EGP:egpSetText(Index,(Power ? "Automatic" : "Off"))
    EGP:egpColor(Index2,(Power ? Green : Red))
    Index=Text[6,number]
    Index2=Element[6,number]
    EGP:egpSetText(Index,(Refine ? "Automatic" : "Off"))
    EGP:egpColor(Index2,(Refine ? Green : Red))
}else{
    EGP:egpColor(Mouse,AColor)
}
